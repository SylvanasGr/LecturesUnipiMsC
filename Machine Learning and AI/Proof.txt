Δίτιμη Λογική (τιμές 0,1)
Πίνακας Αλήθειας Λογικού AND
(a)
	p	q	p /\ q (p and q, p*q)
	false	false	false
	false	true	false
	true 	false	false
	true	true	true
(b)
	p	q	p /\ q (p and q)
	0	0	0
	0	1	0
	1 	0	0
	1	1	1
(c) function value(p and q) = value(p)*value(q)

Πίνακας Αλήθειας Λογικού OR
(a)
	p	q	p \/ q (p or q)
	false	false	false
	false	true	true
	true 	false	true
	true	true	true
(b)
	p	q	p \/ q (p or q)
	0	0	0
	0	1	1
	1 	0	1
	1	1	1

(c) function value(p or q) = value(p) + value(q) - value(p)*value(q)

Πίνακας Αλήθειας Λογικού XOR
(a)
	p	q	p xor q 
	false	false	false
	false	true	true
	true 	false	true
	true	true	false
(b)
	p	q	p xor q
	0	0	0
	0	1	1
	1 	0	1
	1	1	0

(c) function value(p xor q) = |value(p) - value(q)|
(c) function value(p xor q) = value(p) + value(q) - 2*value(p)*value(q)
(c) function value(p xor q) = value(p)*(1-value(q))+(1-value(p))*value(q)

Material Implication p -> q ισοδύναμο (not p) \/ q

p1 and p2 and ... and pn -> q ισοδύναμο με 
not (p1 and p2 and ... and pn) \/ q ισοδύναμο με
(not p1) \/ (not p2) \/ ... \/ (not pn) \/ q

Prolog
q :- p1,p2,...,pn.
p1.
p2.
...
pn.

(not A = ~A)
(q \/ ~p1 \/ ~ p2 \/ ... \/ ~pn)

Resolution principle 
{(q \/ ~p1 \/ ~ p2 \/ ... \/ ~pn) και (p1)} <=> (q \/ ~ p2 \/ ... \/ ~pn)



LOGICAL IMPLICATION (λογική Συνεπαγωγή)
"P |= Q" = "Το P επαληθεύει το Q"

p1 /\ p2 /\ ~p3

p1 = "Γίνεται πόλεμος στην Ουκρανία"
p2 = "Γίνονται σφαγές στην Υεμένη"
p3 = "Γίνεται σεισμός στην Ιαπωνία"

Πίνακας Αλήθειας

		p1 	p2	p3	~p3	p1 /\ p2 /\ ~p3			p1 \/ p2 \/ p3
ερμηνεία 1	0	0	0	1		0				0
ερμηνεία 2	0	0	1	0		0				1 <= Μοντέλο (Model)
ερμηνεία 3	0	1	0	1		0				1 <= Μοντέλο (Model)
ερμηνεία 4	0	1	1	0		0				1 <= Μοντέλο (Model)
ερμηνεία 5	1	0	0	1		0				1 <= Μοντέλο (Model)
ερμηνεία 6	1	0	1	0		0				1 <= Μοντέλο (Model)
ερμηνεία 7	1	1	0	1		1 <= Μοντέλο (Model)		1 <= Μοντέλο (Model)
ερμηνεία 8	1	1	1	0		0				1 <= Μοντέλο (Model)

3 άτομα p1, p2, p3 => 2^3 = 8 ερμηνείες
10 άτομα p1, ..., p10 => 2^10 =1024 ερμηνείες
1000 άτομα p1, ..., p1000 => 2^1000 = .... ερμηνείες

Η Τιμή Αλήθειας μέσω λογικής συνεπαγωγής (P|=Q)
"{p1, p2, ~p3} |= p1 /\ p2 /\ ~p3" = "Το {p1, p2, ~p3} επαληθεύει την (p1 /\ p2 /\ ~p3)"

Η Τιμή Αλήθειας μέσω συμπερασματολογίας (P |-R Q, Στο σύστημα απόδειξης R, Το σύνολο Π αποδεικνύει την πρόταση Q)
Κανόνες Συμπερασματολογίας : Modus Ponens (A και A->B τότε Β), Συζευξη (A, B τότε A /\ B)
Αξιώματα : 
	1. p1
	2. p2
	3 ~p3
	4. p1 /\ p2 (από πρόταση 1, πρόταση2, Σύζευξη) 
	5. p1 /\ p2 /\ ~p3 (πρόταση 4, πρόταση 3, Σύζευξη)
Αποδείχθηκε
ο.ε.ε, όπερ έδει δείξε (qed)

"Αν βρέχει και έχω ομπρέλα τότε θα πάω στο σπίτι με τα πόδια"
Συμβολισμός : p1 = "Βρέχει", p2 = "Έχω ομπρέλα", p3 = "Θα πάω σπίτι με τα πόδια"
Τι ξέρω ?
Ξέρω ότι "Βρέχει", "έχω ομπρέλα", "Αν βρέχει και έχω ομπρέλα τότε θα πάω στο σπίτι με τα πόδια"
Θέλω να αποδείξω ότι "θα πάω στο σπίτι με τα πόδια"
Τι ξέρω : {p1, p2, p1 /\ p2 -> p3} |-R p3

? {p1, p2, p1 /\ p2 -> p3} |-R p3
  R = (Modus Ponens (A και A->B τότε Β), Συζευξη (A, B τότε A /\ B))
	1. p1 						(Αληθεύει το "Βρέχει")
	2. p2 						(Αληθεύει το "έχω ομπρέλα")
	3. p1 /\ p2 -> p3				(Αληθεύει το "Αν βρέχει και έχω ομπρέλα τότε θα πάω στο σπίτι με τα πόδια")
	4. p1 /\ p2 (απο πρόταση 1, πρόταση 2, Σύζευξη) (Αληθεύει το "Βρέχει και έχω ομπρέλα")
	5. p3 (από 4 (p1 /\ p2), 3 (p1 /\ p2 -> p3), Modus Ponens (A->B, A τότε B) όπου Α=(p1 /\ p2), Β=p3

Απόδειξη : 
Η παραγωγή μιας ακολουθίας προτάσεων με βάση τις προηγούμενες προτάσεις και τους κανόνες 
συμπερασματολογίας μέχρι να φτάσω στην πρόταση που θέλω να αποδείξω.

Ιδιότητες συστημάτων απόδειξης
Ορθότητα : Ό,τι αποδεικνύεται τότε αυτό αληθεύει  		(Σ |- R φ => Σ|= φ) "σκέφτεσαι σωστά"
Πληρότητα  : Ό,τι αληθεύει τότε αυτό μπορεί να αποδειχθεί	(Σ|= φ => Σ |- R φ} "είσαι πολύ έξυπνος"












Τρίτιμη Λογική (τιμές 0,1/2,1)

...

Πολύτιμη Λογική (τιμές 0, 1/ν, 2/ν, ..., ν/ν)

Ασαφής Λογική (τιμές από 0 έως 1 - συνεχείς τιμές) 



